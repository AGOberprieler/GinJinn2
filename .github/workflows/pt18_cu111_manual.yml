name: Manual Build pytorch1.8 cuda11.1

on: 
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'
      tags:
        description: 'Test pytorch1.8 cuda11.1 build'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
        ginjinn-distribution: [ginjinn-gpu-pt18_cu111_linux]
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
    name: Python ${{ matrix.python-version }} example
    steps:
      - uses: actions/checkout@v2
      - name: Setup conda
        uses: s-weigand/setup-conda@v1
        with:
          update-conda: true
          python-version: ${{ matrix.python-version }}
          conda-channels: anaconda, conda-forge, pytorch
      - run: conda --version
      - run: which python
      - name: Install dependencies
        run: |
          conda install pytest conda-build anaconda-client pip pytest-cov
      - name: Build and publish GinJinn
        run: |
          conda config --set anaconda_upload yes
          conda-build conda.recipe/${{ matrix.ginjinn-distribution }} --token ${{ secrets.ANACONDA_TOKEN }} --user AGOberprieler --variants "{'python': ['${{ matrix.python-version }}']}"
      - name: Install GinJinn from Anaconda cloud
        run: conda install -c conda-forge -c pytorch -c agoberprieler ginjinn2 pytorch=1.8.0 cudatoolkit=11.1
      - name: Test with pytest
        run: |
          pytest --cov=./ginjinn/ --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: true
