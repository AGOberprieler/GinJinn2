''' ginjinn utils sw_split parser
'''

import argparse

def setup_sw_split_parser(subparsers):
    '''setup_sw_split_parser

    Setup parser for the ginjinn utils sw_split subcommand.

    Parameters
    ----------
    subparsers
        An object returned by argparse.ArgumentParser.add_subparsers()

    Returns
    -------
    parser
        An argparse ArgumentParser, registered for the utils sw_split subcommand.
    '''
    sw_split_parser = subparsers.add_parser(
        'sw_split',
        help = '''
            Crop train-test-val-split (ginjinn split) images and corresponding annotations
            into sliding windows.
        ''',
        description = '''
            Crop train-test-val-split (ginjinn split) images and corresponding annotations
            into sliding windows.
        ''',
        formatter_class=argparse.ArgumentDefaultsHelpFormatter,
    )

    # required
    sw_split_required = sw_split_parser.add_argument_group('required arguments')

    sw_split_required.add_argument(
        '-o', '--out_dir',
        type = str,
        help = '''
            Path to directory, which the sliding-window cropped datasets should be written to.
        ''',
        required=True,
    )
    sw_split_required.add_argument(
        '-i', '--split_dir',
        type = str,
        help = '''
            Path to directory generated by ginjinn split.
        ''',
        required=True,
    )

    # optional
    sw_split_optional = sw_split_parser.add_argument_group('optional arguments')
    sw_split_optional.add_argument(
        '-t', '--ann_type',
        type = str,
        help = '''
            Annotation type. If 'auto', will be inferred.
        ''',
        choices = ['auto', 'COCO', 'PVOC'],
        default = 'auto',
    )
    sw_split_optional.add_argument(
        '-s', '--window_size',
        type = int,
        nargs = '+',
        help = '''
            Sliding window size in pixel.
            If one argument is passed, quadratic windows of window_size will be generated.
            If two arguments are passed, they are interpreted as window width and height, respectively.

            "-s 500", for example, crops sliding windows of size 500*500 (w*h), while "-s 500 300" crops 
            windows of size 500*300.
        ''',
        default=[1000],
    )
    sw_split_optional.add_argument(
        '-p', '--overlap',
        type = int,
        nargs = '+',
        help = '''
            Overlap between sliding windows in pixel.
            If one argument is passed, the same overlap is used in horizontal and vertical direction.
            If two arguments are passed, they are interpreted as overlap in horizontal and
            vertical, respectively.
        ''',
        default=[0.5],
    )
    sw_split_optional.add_argument(
        '-k', '--task',
        choices = [
            'instance-segmentation', 'bbox-detection'
        ],
        help = '''
            Task, which the dataset will be used for. Only applies to COCO
            datasets.
        ''',
        default = 'instance-segmentation',
    )
    sw_split_optional.add_argument(
        '-m', '--img_id',
        type = int,
        help = '''
            Starting image ID for newly generated image annotations.
        ''',
        default=1,
    )
    sw_split_optional.add_argument(
        '-b', '--obj_id',
        type = int,
        help = '''
            Starting object ID for newly generated object annotations.
        ''',
        default=1,
    )
    sw_split_optional.add_argument(
        '-r', '--remove_empty',
        dest = 'remove_empty',
        action = 'store_true',
        help = '''
            If this flag is set, cropped images without object annotation will
            not be saved.
        '''
    )
    sw_split_parser.set_defaults(remove_empty = False)
    sw_split_optional.add_argument(
        '-c', '--remove_incomplete',
        dest = 'remove_incomplete',
        action = 'store_true',
        help = '''
            If this flag is set, object annotations that are touched (trimmed)
            by a sliding-window edge are removed from the corresponding sliding-window images. 
        '''
    )
    sw_split_parser.set_defaults(remove_incomplete = False)

    return sw_split_parser
